// source: id_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.bmcp.id_service.GenerateIdRequest', null, global);
goog.exportSymbol('proto.bmcp.id_service.GenerateIdResponse', null, global);
goog.exportSymbol('proto.bmcp.id_service.ParseIdRequest', null, global);
goog.exportSymbol('proto.bmcp.id_service.ParseIdResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmcp.id_service.GenerateIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bmcp.id_service.GenerateIdRequest.repeatedFields_, null);
};
goog.inherits(proto.bmcp.id_service.GenerateIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmcp.id_service.GenerateIdRequest.displayName = 'proto.bmcp.id_service.GenerateIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmcp.id_service.GenerateIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmcp.id_service.GenerateIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmcp.id_service.GenerateIdResponse.displayName = 'proto.bmcp.id_service.GenerateIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmcp.id_service.ParseIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.bmcp.id_service.ParseIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmcp.id_service.ParseIdRequest.displayName = 'proto.bmcp.id_service.ParseIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.bmcp.id_service.ParseIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.bmcp.id_service.ParseIdResponse.repeatedFields_, null);
};
goog.inherits(proto.bmcp.id_service.ParseIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.bmcp.id_service.ParseIdResponse.displayName = 'proto.bmcp.id_service.ParseIdResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bmcp.id_service.GenerateIdRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmcp.id_service.GenerateIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bmcp.id_service.GenerateIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmcp.id_service.GenerateIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmcp.id_service.GenerateIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filePath: jspb.Message.getFieldWithDefault(msg, 1, ""),
    entityType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    parentCanonicalId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    paramTypesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    languageHint: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmcp.id_service.GenerateIdRequest}
 */
proto.bmcp.id_service.GenerateIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmcp.id_service.GenerateIdRequest;
  return proto.bmcp.id_service.GenerateIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmcp.id_service.GenerateIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmcp.id_service.GenerateIdRequest}
 */
proto.bmcp.id_service.GenerateIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilePath(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentCanonicalId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addParamTypes(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageHint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmcp.id_service.GenerateIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmcp.id_service.GenerateIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmcp.id_service.GenerateIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmcp.id_service.GenerateIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilePath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEntityType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getParentCanonicalId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getParamTypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getLanguageHint();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string file_path = 1;
 * @return {string}
 */
proto.bmcp.id_service.GenerateIdRequest.prototype.getFilePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmcp.id_service.GenerateIdRequest} returns this
 */
proto.bmcp.id_service.GenerateIdRequest.prototype.setFilePath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string entity_type = 2;
 * @return {string}
 */
proto.bmcp.id_service.GenerateIdRequest.prototype.getEntityType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmcp.id_service.GenerateIdRequest} returns this
 */
proto.bmcp.id_service.GenerateIdRequest.prototype.setEntityType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.bmcp.id_service.GenerateIdRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmcp.id_service.GenerateIdRequest} returns this
 */
proto.bmcp.id_service.GenerateIdRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string parent_canonical_id = 4;
 * @return {string}
 */
proto.bmcp.id_service.GenerateIdRequest.prototype.getParentCanonicalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmcp.id_service.GenerateIdRequest} returns this
 */
proto.bmcp.id_service.GenerateIdRequest.prototype.setParentCanonicalId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string param_types = 5;
 * @return {!Array<string>}
 */
proto.bmcp.id_service.GenerateIdRequest.prototype.getParamTypesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.bmcp.id_service.GenerateIdRequest} returns this
 */
proto.bmcp.id_service.GenerateIdRequest.prototype.setParamTypesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.bmcp.id_service.GenerateIdRequest} returns this
 */
proto.bmcp.id_service.GenerateIdRequest.prototype.addParamTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bmcp.id_service.GenerateIdRequest} returns this
 */
proto.bmcp.id_service.GenerateIdRequest.prototype.clearParamTypesList = function() {
  return this.setParamTypesList([]);
};


/**
 * optional string language_hint = 6;
 * @return {string}
 */
proto.bmcp.id_service.GenerateIdRequest.prototype.getLanguageHint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmcp.id_service.GenerateIdRequest} returns this
 */
proto.bmcp.id_service.GenerateIdRequest.prototype.setLanguageHint = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmcp.id_service.GenerateIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bmcp.id_service.GenerateIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmcp.id_service.GenerateIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmcp.id_service.GenerateIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    canonicalId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmcp.id_service.GenerateIdResponse}
 */
proto.bmcp.id_service.GenerateIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmcp.id_service.GenerateIdResponse;
  return proto.bmcp.id_service.GenerateIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmcp.id_service.GenerateIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmcp.id_service.GenerateIdResponse}
 */
proto.bmcp.id_service.GenerateIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCanonicalId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmcp.id_service.GenerateIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmcp.id_service.GenerateIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmcp.id_service.GenerateIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmcp.id_service.GenerateIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCanonicalId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string canonical_id = 1;
 * @return {string}
 */
proto.bmcp.id_service.GenerateIdResponse.prototype.getCanonicalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmcp.id_service.GenerateIdResponse} returns this
 */
proto.bmcp.id_service.GenerateIdResponse.prototype.setCanonicalId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string gid = 2;
 * @return {string}
 */
proto.bmcp.id_service.GenerateIdResponse.prototype.getGid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmcp.id_service.GenerateIdResponse} returns this
 */
proto.bmcp.id_service.GenerateIdResponse.prototype.setGid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmcp.id_service.ParseIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.bmcp.id_service.ParseIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmcp.id_service.ParseIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmcp.id_service.ParseIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idString: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmcp.id_service.ParseIdRequest}
 */
proto.bmcp.id_service.ParseIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmcp.id_service.ParseIdRequest;
  return proto.bmcp.id_service.ParseIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmcp.id_service.ParseIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmcp.id_service.ParseIdRequest}
 */
proto.bmcp.id_service.ParseIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdString(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmcp.id_service.ParseIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmcp.id_service.ParseIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmcp.id_service.ParseIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmcp.id_service.ParseIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdString();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id_string = 1;
 * @return {string}
 */
proto.bmcp.id_service.ParseIdRequest.prototype.getIdString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmcp.id_service.ParseIdRequest} returns this
 */
proto.bmcp.id_service.ParseIdRequest.prototype.setIdString = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.bmcp.id_service.ParseIdResponse.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.bmcp.id_service.ParseIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.bmcp.id_service.ParseIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.bmcp.id_service.ParseIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmcp.id_service.ParseIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    filePath: jspb.Message.getFieldWithDefault(msg, 1, ""),
    entityType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    parentCanonicalId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    paramTypesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    canonicalId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    languagePrefix: jspb.Message.getFieldWithDefault(msg, 7, ""),
    gid: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.bmcp.id_service.ParseIdResponse}
 */
proto.bmcp.id_service.ParseIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.bmcp.id_service.ParseIdResponse;
  return proto.bmcp.id_service.ParseIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.bmcp.id_service.ParseIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.bmcp.id_service.ParseIdResponse}
 */
proto.bmcp.id_service.ParseIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilePath(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentCanonicalId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addParamTypes(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCanonicalId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguagePrefix(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setGid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.bmcp.id_service.ParseIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.bmcp.id_service.ParseIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.bmcp.id_service.ParseIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.bmcp.id_service.ParseIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilePath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEntityType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getParentCanonicalId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getParamTypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getCanonicalId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLanguagePrefix();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getGid();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string file_path = 1;
 * @return {string}
 */
proto.bmcp.id_service.ParseIdResponse.prototype.getFilePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmcp.id_service.ParseIdResponse} returns this
 */
proto.bmcp.id_service.ParseIdResponse.prototype.setFilePath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string entity_type = 2;
 * @return {string}
 */
proto.bmcp.id_service.ParseIdResponse.prototype.getEntityType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmcp.id_service.ParseIdResponse} returns this
 */
proto.bmcp.id_service.ParseIdResponse.prototype.setEntityType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.bmcp.id_service.ParseIdResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmcp.id_service.ParseIdResponse} returns this
 */
proto.bmcp.id_service.ParseIdResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string parent_canonical_id = 4;
 * @return {string}
 */
proto.bmcp.id_service.ParseIdResponse.prototype.getParentCanonicalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmcp.id_service.ParseIdResponse} returns this
 */
proto.bmcp.id_service.ParseIdResponse.prototype.setParentCanonicalId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string param_types = 5;
 * @return {!Array<string>}
 */
proto.bmcp.id_service.ParseIdResponse.prototype.getParamTypesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.bmcp.id_service.ParseIdResponse} returns this
 */
proto.bmcp.id_service.ParseIdResponse.prototype.setParamTypesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.bmcp.id_service.ParseIdResponse} returns this
 */
proto.bmcp.id_service.ParseIdResponse.prototype.addParamTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.bmcp.id_service.ParseIdResponse} returns this
 */
proto.bmcp.id_service.ParseIdResponse.prototype.clearParamTypesList = function() {
  return this.setParamTypesList([]);
};


/**
 * optional string canonical_id = 6;
 * @return {string}
 */
proto.bmcp.id_service.ParseIdResponse.prototype.getCanonicalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmcp.id_service.ParseIdResponse} returns this
 */
proto.bmcp.id_service.ParseIdResponse.prototype.setCanonicalId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string language_prefix = 7;
 * @return {string}
 */
proto.bmcp.id_service.ParseIdResponse.prototype.getLanguagePrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmcp.id_service.ParseIdResponse} returns this
 */
proto.bmcp.id_service.ParseIdResponse.prototype.setLanguagePrefix = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string gid = 8;
 * @return {string}
 */
proto.bmcp.id_service.ParseIdResponse.prototype.getGid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.bmcp.id_service.ParseIdResponse} returns this
 */
proto.bmcp.id_service.ParseIdResponse.prototype.setGid = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


goog.object.extend(exports, proto.bmcp.id_service);
